name: deploy

on:
  push:
    branches: [ main ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: \${{ secrets.DOCKERHUB_USERNAME }}
          password: \${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: evgen1771/autoparts-bot:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: \${{ secrets.SERVER_HOST }}
          username: \${{ secrets.SERVER_USER }}
          key: \${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          command_timeout: 30m
          script: |
            set -e
            cd ~/autoparts_bot

            # обновляем код
            git fetch origin main
            git reset --hard origin/main

            # проверка .env
            if [ ! -f ".env" ]; then
              echo "ERROR: ~/autoparts_bot/.env not found"
              exit 1
            fi

            # подтягиваем новый образ и перезапускаем контейнер
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

      - name: Healthcheck container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: \${{ secrets.SERVER_HOST }}
          username: \${{ secrets.SERVER_USER }}
          key: \${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          command_timeout: 5m
          script: |
            set -e
            echo "⏳ Waiting for container health..."
            for i in {1..10}; do
              STATUS=\$(docker inspect --format='{{.State.Health.Status}}' autoparts_bot || echo "starting")
              echo "Attempt \$i: \$STATUS"
              if [ "\$STATUS" = "healthy" ]; then
                echo "✅ Container is healthy"
                exit 0
              fi
              sleep 10
            done
            echo "❌ Container did not become healthy in time"
            docker logs autoparts_bot
            exit 1
